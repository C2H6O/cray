package net.doubov.myredditclient.model;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig personDaoConfig;
    private final DaoConfig leaseDaoConfig;
    private final DaoConfig resultSetDaoConfig;
    private final DaoConfig resultDaoConfig;

    private final PersonDao personDao;
    private final LeaseDao leaseDao;
    private final ResultSetDao resultSetDao;
    private final ResultDao resultDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        personDaoConfig = daoConfigMap.get(PersonDao.class).clone();
        personDaoConfig.initIdentityScope(type);

        leaseDaoConfig = daoConfigMap.get(LeaseDao.class).clone();
        leaseDaoConfig.initIdentityScope(type);

        resultSetDaoConfig = daoConfigMap.get(ResultSetDao.class).clone();
        resultSetDaoConfig.initIdentityScope(type);

        resultDaoConfig = daoConfigMap.get(ResultDao.class).clone();
        resultDaoConfig.initIdentityScope(type);

        personDao = new PersonDao(personDaoConfig, this);
        leaseDao = new LeaseDao(leaseDaoConfig, this);
        resultSetDao = new ResultSetDao(resultSetDaoConfig, this);
        resultDao = new ResultDao(resultDaoConfig, this);

        registerDao(Person.class, personDao);
        registerDao(Lease.class, leaseDao);
        registerDao(ResultSet.class, resultSetDao);
        registerDao(Result.class, resultDao);
    }
    
    public void clear() {
        personDaoConfig.getIdentityScope().clear();
        leaseDaoConfig.getIdentityScope().clear();
        resultSetDaoConfig.getIdentityScope().clear();
        resultDaoConfig.getIdentityScope().clear();
    }

    public PersonDao getPersonDao() {
        return personDao;
    }

    public LeaseDao getLeaseDao() {
        return leaseDao;
    }

    public ResultSetDao getResultSetDao() {
        return resultSetDao;
    }

    public ResultDao getResultDao() {
        return resultDao;
    }

}
